Data: 14/03/2017

Para todas as questões, compile-as com o gcc e execute-as via terminal.

1. Crie um "Olá mundo!" em C.
gcc -c olamundo.c
gcc -o olamundo olamundo.o
./olamundo
2. Crie um código em C que pergunta ao usuário o seu nome, e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':
	$ ./ola_usuario_1
	$ Digite o seu nome: Eu
	$ Ola Eu
	$codigo ola_usuario_1.c

3. Apresente os comportamentos do código anterior nos seguintes casos:
	(a) Se o usuário insere mais de um nome.
		$ ./ola_usuario_1
		$ Digite o seu nome: Eu Mesmo
		Como usou o scanf, apos o espaço ele so coloca o primeiro nome
	(b) Se o usuário insere mais de um nome entre aspas duplas. Por exemplo:
		$ ./ola_usuario_1
		$ Digite o seu nome: "Eu Mesmo"
		ai vai imprimir os dois nomes na tela
	(c) Se é usado um pipe. Por exemplo:
		$ echo Eu | ./ola_usuario_1
		ele ja le o nome do usuario, não precisando digitar na hora da execução
	(d) Se é usado um pipe com mais de um nome. Por exemplo:
		$ echo Eu Mesmo | ./ola_usuario_1
		fica como na letra A
	(e) Se é usado um pipe com mais de um nome entre aspas duplas. Por exemplo:
		$ echo "Eu Mesmo" | ./ola_usuario_1
		como na letra B
	(f) Se é usado o redirecionamento de arquivo. Por exemplo:
		$ echo Ola mundo cruel! > ola.txt
		$ ./ola_usuario_1 < ola.txt
		usando o scanf aparece apenas ola, se usar gets mostra tudo.

4. Crie um código em C que recebe o nome do usuário como um argumento de entrada (usando as variáveis argc e *argv[]), e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
	$ ./ola_usuario_2 Eu
	$ Ola Eu
	$imprime eu na tela
	codigo ola_usuario_2.c

5. Apresente os comportamentos do código anterior nos seguintes casos:
	(a) Se o usuário insere mais de um nome.
		$ ./ola_usuario_2 Eu Mesmo
		como usa apenas o [1], vai aparecer so o eu
	(b) Se o usuário insere mais de um nome entre aspas duplas. Por exemplo:
		$ ./ola_usuario_2 "Eu Mesmo"
		aparece tudo que for digitado entre ""
	(c) Se é usado um pipe. Por exemplo:
		$ echo Eu | ./ola_usuario_2
		aparece apenas o eu
	(d) Se é usado um pipe com mais de um nome. Por exemplo:
		$ echo Eu Mesmo | ./ola_usuario_2
		aparece o primeiro nome apena
	(e) Se é usado um pipe com mais de um nome entre aspas duplas. Por exemplo:
		$ echo Eu Mesmo | ./ola_usuario_2
		aparece tudo entre aspas duplas
	(f) Se é usado o redirecionamento de arquivo. Por exemplo:
		$ echo Ola mundo cruel! > ola.txt
		$ ./ola_usuario_2 < ola.txt
		aparece null

6. Crie um código em C que faz o mesmo que o código da questão 4, e em seguida imprime no terminal quantos valores de entrada foram fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_3':
	$ ./ola_usuario_3 Eu
	$ Ola Eu
	$ Numero de entradas = 2
	$Basta apenas imprimir o numero do argc
	codido em ola_usuario_3

7. Crie um código em C que imprime todos os argumentos de entrada fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_argumentos':
	$ ./ola_argumentos Eu Mesmo e Minha Pessoa
	$ Argumentos: Eu Mesmo e Minha Pessoa
	$codigo em ola_argumentos.c

8. Crie uma função que retorna a quantidade de caracteres em uma string, usando o seguinte protótipo:

	int Num_Caracs(char *string);

Salve-a em um arquivo separado chamado 'num_caracs.c'. Salve o protótipo em um arquivo chamado 'num_caracs.h'. Compile 'num_caracs.c' para gerar o objeto 'num_caracs.o'.
gcc -c num_caracs.c
gcc -c num_carac_main.c
gcc -o num_caracs num_caracs.o num_caracs_main.o

9. Re-utilize o objeto criado na questão 8 para criar um código que imprime cada argumento de entrada e a quantidade de caracteres de cada um desses argumentos. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_1':
	$ ./ola_num_caracs_1 Eu Mesmo
	$ Argumento: ./ola_num_caracs_1 / Numero de caracteres: 18
	$ Argumento: Eu / Numero de caracteres: 2
	$ Argumento: Mesmo / Numero de caracteres: 5
	$codido em ula_num_caracs_1.c

10. Crie um Makefile para a questão anterior.
 Makefile.txt
 
11. Re-utilize o objeto criado na questão 8 para criar um código que imprime o total de caracteres nos argumentos de entrada. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_2':
	$ ./ola_num_caracs_2 Eu Mesmo
	$ Total de caracteres de entrada: 25
	$

12. Crie um Makefile para a questão anterior.
